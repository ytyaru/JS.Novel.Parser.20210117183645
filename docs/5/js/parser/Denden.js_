class Denden { // でんでんマークダウン。
    // {ベース|ルビ}, {漢字|かんじ}, {漢字|かん|じ}
//    static #REGEX_RUBY = /[\{][^\}]+[\|][^\}]+[\}]/g;
//    static #REGEX_RUBY = /[\{][^\}]+([\|][^\}]+){1..}[\}]/g;
//    static #REGEX_RUBY = /[\{]([^\}]+)([\|][^\}]+){1..}[\}]/g;
    static #REGEX_RUBY_RT = /[\{]([^\}]+)[\|]([^\}]+)[\}]/g; // {...|...}

    static #REGEX_RUBY = /[\{]([^\}]+)[\}]/g; // {...}
    static #REGEX_RB_RT = /([^\|]+)[\|]]/g; // ...|...
//    static #REGEX_RB_RT = /([^\|]+)[\|]([^\|]+)]/g; // ...|...
    /*
    static #REGEX_RUBY = /《《([^\n]{1,50}?)》》/g;
    static #REGEX_DOT = /《《([^\n]{1,50}?)》》/g;
    static #REGEX_RUBY = /[｜|]([^\n]{1,50}?)《([^\n]{1,20}?)》/g;
    static #REGEX_KANJI_RUBY = /([\u2e80-\u2fdf\u3005\3007\303b\u4e00-\u9faf\u3400-\u4dbf\uf900-\ufaff]{1,50}?)《([^\n]{1,20}?)》/g;
    */
    static parse(text) {
        /*
        text = text.replace(Denden.#REGEX_RUBY_RT, (match, p1, p2)=>{
            return `<ruby>${p1}<rt>${p2}</rt></ruby>`;
        });
        */
        text = text.replace(Denden.#REGEX_RUBY, (match, p1)=>{
            const texts = p1.split('|');
            //if (texts.length < 2) { return p1; }
            if (texts.length === 2) {
                return `<ruby>${texts[0]}<rt>${texts[1]}</rt></ruby>`;
            }
            else if (texts[0].length === texts.length) {
                let html = `<ruby>${texts[0]}`;
                const rbs = texts[0].split('');
                const rts = texts.slice(1);
                for (let i=0; i<rbs.length; i++) {
                    html += `${rbs[i-1]}<rt>${rts[i]}</rt>`;
                }
                html += `</ruby>`;
                return html;
            } else { return p1; }
        });
        return text
    }
}
